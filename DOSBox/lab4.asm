DATAS SEGMENT
	BUF DB 5,?,5 DUP (0)
	MSG DB 'ENTER A NUMBER:','$'
	NUM_SIZE DB 0
	OUT_NUM  DQ  0000000000000001H
DATAS ENDS

STACK  SEGMENT STACK
	MYSTACK DW 20 DUP (0)
STACK ENDS

CODES SEGMENT
    ASSUME CS:CODES,DS:DATAS,SS:STACK

START:
	;段基址赋值
	MOV  AX,DATAS
    MOV  DS,AX
    MOV  AX,STACK
    MOV  SS,AX
    ;提示输入
    LEA  DX,MSG
    MOV  AH,09H
    INT  21H

INPUT:
	;读取输入到AL
	LEA  DX,BUF
	MOV  AH,0AH
	INT  21H
	MOV AL,[BUF+2]
	SUB AL,30H
	MOV DL,AL
	CMP DL,00H
	JNZ  H
DIS_ZERO:
	MOV DL,01H
	MOV AH,02H
	INT 21H
H:
	MOV BL,[BUF+3]
	CMP BL,0DH
	JZ  PREPARE
	SUB BL,30H
	ADD BL,9
	ADD AL,BL
; 存入
PREPARE: 
	MOV  [NUM_SIZE],AL
	;换行
	MOV  DL,0AH
	MOV  AH,02H
	INT  21H
	
	;调用
	CALL FACT
	CALL DIS_P
	;结束
	MOV  AX,4C00H
    INT  21H
    
FACT:
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	XOR  AX,AX
	XOR  CX,CX
	MOV  BL,[NUM_SIZE]
	CMP  BL,1
	JE   OVERB
	DEC  BL
	MOV  [NUM_SIZE],BL
	CALL FACT
	INC  BL
	XOR  SI,SI
LOPB:
	CMP  SI,7
	JA   OVERB
	MOV  AL,BYTE PTR [OUT_NUM+SI]
	MUL  BL
	ADD  AX,CX
	JC   A
	XOR  CH,CH
	JMP  B
A:  MOV  CH,01H
B:  MOV  CL,AH
	MOV  BYTE PTR [OUT_NUM+SI],AL
	INC  SI
	JMP  LOPB
OVERB:POP DX
	POP  CX
	POP  BX
	POP  AX
	RET
DIS_P:PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX
	
	MOV  SI,7
C:  CMP  SI,0
	JL   DIS_END
	MOV  BL,BYTE PTR [OUT_NUM+SI]
D:  MOV  BH,BL
	AND  BH,00001111B
	AND  BL,11110000B
	MOV  CL,4
	SHR  BL,CL
	CMP  BL,9
	JA   E
	MOV  DL,BL
	ADD  DL,30H
	MOV  AH,02H
	INT  21H
	JMP  F
E:  MOV  DL,BL
	ADD  DL,37H
	MOV  AH,02H
	INT  21H
F:  CMP  BH,9
	JA   G
	MOV  DL,BH
	ADD  DL,30H
	MOV  AH,02H
	INT  21H
	DEC  SI
	JMP  C
G:  MOV DL,BH
	ADD DL,37H
	MOV AH,02H
	INT 21H
	DEC SI
	JMP C

DIS_END:    
    POP DX
    POP CX
    POP BX
    POP AX
    RET

CODES ENDS
END START

